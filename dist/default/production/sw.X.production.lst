

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Wed Mar 01 09:18:54 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	12F675
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    12                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    13                           	dabs	1,0x5E,2
    14     0000                     
    15                           ; Version 2.40
    16                           ; Generated 06/12/2021 GMT
    17                           ; 
    18                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution. Publication is not required when
    32                           ;        this file is used in an embedded application.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC12F675 Definitions
    48                           ; 
    49                           ; SFR Addresses
    50     0000                     	;# 
    51     0001                     	;# 
    52     0002                     	;# 
    53     0003                     	;# 
    54     0004                     	;# 
    55     0005                     	;# 
    56     000A                     	;# 
    57     000B                     	;# 
    58     000C                     	;# 
    59     000E                     	;# 
    60     000E                     	;# 
    61     000F                     	;# 
    62     0010                     	;# 
    63     0019                     	;# 
    64     001E                     	;# 
    65     001F                     	;# 
    66     0081                     	;# 
    67     0085                     	;# 
    68     008C                     	;# 
    69     008E                     	;# 
    70     0090                     	;# 
    71     0095                     	;# 
    72     0096                     	;# 
    73     0096                     	;# 
    74     0099                     	;# 
    75     009A                     	;# 
    76     009A                     	;# 
    77     009B                     	;# 
    78     009C                     	;# 
    79     009D                     	;# 
    80     009E                     	;# 
    81     009F                     	;# 
    82     0000                     	;# 
    83     0001                     	;# 
    84     0002                     	;# 
    85     0003                     	;# 
    86     0004                     	;# 
    87     0005                     	;# 
    88     000A                     	;# 
    89     000B                     	;# 
    90     000C                     	;# 
    91     000E                     	;# 
    92     000E                     	;# 
    93     000F                     	;# 
    94     0010                     	;# 
    95     0019                     	;# 
    96     001E                     	;# 
    97     001F                     	;# 
    98     0081                     	;# 
    99     0085                     	;# 
   100     008C                     	;# 
   101     008E                     	;# 
   102     0090                     	;# 
   103     0095                     	;# 
   104     0096                     	;# 
   105     0096                     	;# 
   106     0099                     	;# 
   107     009A                     	;# 
   108     009A                     	;# 
   109     009B                     	;# 
   110     009C                     	;# 
   111     009D                     	;# 
   112     009E                     	;# 
   113     009F                     	;# 
   114     0000                     	;# 
   115     0001                     	;# 
   116     0002                     	;# 
   117     0003                     	;# 
   118     0004                     	;# 
   119     0005                     	;# 
   120     000A                     	;# 
   121     000B                     	;# 
   122     000C                     	;# 
   123     000E                     	;# 
   124     000E                     	;# 
   125     000F                     	;# 
   126     0010                     	;# 
   127     0019                     	;# 
   128     001E                     	;# 
   129     001F                     	;# 
   130     0081                     	;# 
   131     0085                     	;# 
   132     008C                     	;# 
   133     008E                     	;# 
   134     0090                     	;# 
   135     0095                     	;# 
   136     0096                     	;# 
   137     0096                     	;# 
   138     0099                     	;# 
   139     009A                     	;# 
   140     009A                     	;# 
   141     009B                     	;# 
   142     009C                     	;# 
   143     009D                     	;# 
   144     009E                     	;# 
   145     009F                     	;# 
   146     0000                     	;# 
   147     0001                     	;# 
   148     0002                     	;# 
   149     0003                     	;# 
   150     0004                     	;# 
   151     0005                     	;# 
   152     000A                     	;# 
   153     000B                     	;# 
   154     000C                     	;# 
   155     000E                     	;# 
   156     000E                     	;# 
   157     000F                     	;# 
   158     0010                     	;# 
   159     0019                     	;# 
   160     001E                     	;# 
   161     001F                     	;# 
   162     0081                     	;# 
   163     0085                     	;# 
   164     008C                     	;# 
   165     008E                     	;# 
   166     0090                     	;# 
   167     0095                     	;# 
   168     0096                     	;# 
   169     0096                     	;# 
   170     0099                     	;# 
   171     009A                     	;# 
   172     009A                     	;# 
   173     009B                     	;# 
   174     009C                     	;# 
   175     009D                     	;# 
   176     009E                     	;# 
   177     009F                     	;# 
   178     0005                     _GPIO	set	5
   179     0019                     _CMCON	set	25
   180     001F                     _ADCON0	set	31
   181     0001                     _TMR0	set	1
   182     005F                     _GIE	set	95
   183     005D                     _T0IE	set	93
   184     0028                     _GP0	set	40
   185     005A                     _T0IF	set	90
   186     0085                     _TRISIO	set	133
   187     0099                     _VRCON	set	153
   188     009F                     _ANSEL	set	159
   189     0081                     _OPTION_REGbits	set	129
   190                           
   191                           	psect	cinit
   192     03FB                     start_initialization:	
   193                           ; #config settings
   194                           
   195     03FB                     __initialization:
   196                           
   197                           ; Clear objects allocated to BANK0
   198     03FB  1283               	bcf	3,5	;RP0=0, select bank0
   199     03FC  01A0               	clrf	__pbssBANK0& (0+127)
   200     03FD                     end_of_initialization:	
   201                           ;End of C runtime variable initialization code
   202                           
   203     03FD                     __end_of__initialization:
   204     03FD  0183               	clrf	3
   205     03FE  2BE8               	ljmp	_main	;jump to C main() function
   206                           
   207                           	psect	bssBANK0
   208     0020                     __pbssBANK0:
   209     0020                     _PWM:
   210     0020                     	ds	1
   211                           
   212                           	psect	cstackCOMMON
   213     0000                     __pcstackCOMMON:
   214     0000                     ??_interruptISR:
   215     0000                     ??_InitPWM:	
   216                           ; 1 bytes @ 0x0
   217                           
   218     0000                     ??_main:	
   219                           ; 1 bytes @ 0x0
   220                           
   221                           
   222                           	psect	cstackBANK0
   223     0000                     __pcstackBANK0:	
   224                           ; 1 bytes @ 0x0
   225                           
   226     0000                     ?_interruptISR:
   227     0000                     ?_InitPWM:	
   228                           ; 1 bytes @ 0x0
   229                           
   230     0000                     ?_main:	
   231                           ; 1 bytes @ 0x0
   232                           
   233                           
   234                           	psect	maintext
   235     03E8                     __pmaintext:	
   236                           ; 1 bytes @ 0x0
   237 ;;
   238 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   239 ;;
   240 ;; *************** function _main *****************
   241 ;; Defined at:
   242 ;;		line 28 in file "Main.c"
   243 ;; Parameters:    Size  Location     Type
   244 ;;		None
   245 ;; Auto vars:     Size  Location     Type
   246 ;;		None
   247 ;; Return value:  Size  Location     Type
   248 ;;                  1    wreg      void 
   249 ;; Registers used:
   250 ;;		wreg, status,2, status,0, pclath, cstack
   251 ;; Tracked objects:
   252 ;;		On entry : B00/0
   253 ;;		On exit  : 0/0
   254 ;;		Unchanged: 0/0
   255 ;; Data sizes:     COMMON   BANK0
   256 ;;      Params:         0       0
   257 ;;      Locals:         0       0
   258 ;;      Temps:          0       0
   259 ;;      Totals:         0       0
   260 ;;Total ram usage:        0 bytes
   261 ;; Hardware stack levels required when called: 1
   262 ;; This function calls:
   263 ;;		_InitPWM
   264 ;;		_interruptISR
   265 ;; This function is called by:
   266 ;;		Startup code after reset
   267 ;; This function uses a non-reentrant model
   268 ;;
   269                           
   270     03E8                     _main:	
   271                           ;psect for function _main
   272                           
   273     03E8                     l693:	
   274                           ;incstack = 0
   275                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   276                           
   277                           
   278                           ;Main.c: 30:  ANSEL = 0x00;
   279     03E8  1683               	bsf	3,5	;RP0=1, select bank1
   280     03E9  019F               	clrf	31	;volatile
   281                           
   282                           ;Main.c: 31:  ADCON0 = 0x00;
   283     03EA  1283               	bcf	3,5	;RP0=0, select bank0
   284     03EB  019F               	clrf	31	;volatile
   285     03EC                     l695:
   286                           
   287                           ;Main.c: 32:  CMCON = 0x07;
   288     03EC  3007               	movlw	7
   289     03ED  0099               	movwf	25	;volatile
   290     03EE                     l697:
   291                           
   292                           ;Main.c: 33:  VRCON = 0x00;
   293     03EE  1683               	bsf	3,5	;RP0=1, select bank1
   294     03EF  0199               	clrf	25	;volatile
   295                           
   296                           ;Main.c: 34:  TRISIO = 0x08;
   297     03F0  3008               	movlw	8
   298     03F1  0085               	movwf	5	;volatile
   299     03F2                     l699:
   300                           
   301                           ;Main.c: 35:  GPIO = 0x00;
   302     03F2  1283               	bcf	3,5	;RP0=0, select bank0
   303     03F3  0185               	clrf	5	;volatile
   304     03F4                     l701:
   305                           
   306                           ;Main.c: 39:  InitPWM();
   307     03F4  23CD               	fcall	_InitPWM
   308     03F5                     l703:
   309                           
   310                           ;Main.c: 40:     interruptISR();
   311     03F5  23D6               	fcall	_interruptISR
   312     03F6                     l705:
   313                           
   314                           ;Main.c: 44:  PWM = 127;
   315     03F6  307F               	movlw	127
   316     03F7  1283               	bcf	3,5	;RP0=0, select bank0
   317     03F8  00A0               	movwf	_PWM
   318     03F9                     l48:	
   319                           ;Main.c: 46:  while(1)
   320                           
   321     03F9                     l49:	
   322                           ;Main.c: 47:  {;Main.c: 48:  }
   323                           
   324     03F9  2BF9               	goto	l48
   325     03FA  2800               	ljmp	start
   326     03FB                     __end_of_main:
   327                           
   328                           	psect	text1
   329     03D6                     __ptext1:	
   330 ;; *************** function _interruptISR *****************
   331 ;; Defined at:
   332 ;;		line 10 in file "ISR.c"
   333 ;; Parameters:    Size  Location     Type
   334 ;;		None
   335 ;; Auto vars:     Size  Location     Type
   336 ;;		None
   337 ;; Return value:  Size  Location     Type
   338 ;;                  1    wreg      void 
   339 ;; Registers used:
   340 ;;		wreg, status,2
   341 ;; Tracked objects:
   342 ;;		On entry : 0/0
   343 ;;		On exit  : 0/0
   344 ;;		Unchanged: 0/0
   345 ;; Data sizes:     COMMON   BANK0
   346 ;;      Params:         0       0
   347 ;;      Locals:         0       0
   348 ;;      Temps:          0       0
   349 ;;      Totals:         0       0
   350 ;;Total ram usage:        0 bytes
   351 ;; Hardware stack levels used: 1
   352 ;; This function calls:
   353 ;;		Nothing
   354 ;; This function is called by:
   355 ;;		_main
   356 ;; This function uses a non-reentrant model
   357 ;;
   358                           
   359     03D6                     _interruptISR:	
   360                           ;psect for function _interruptISR
   361                           
   362     03D6                     l665:	
   363                           ;incstack = 0
   364                           ; Regs used in _interruptISR: [wreg+status,2]
   365                           
   366                           
   367                           ;ISR.c: 12:  if(T0IF)
   368     03D6  1D0B               	btfss	11,2	;volatile
   369     03D7  2BD9               	goto	u31
   370     03D8  2BDA               	goto	u30
   371     03D9                     u31:
   372     03D9  2BE7               	goto	l14
   373     03DA                     u30:
   374     03DA                     l667:
   375                           
   376                           ;ISR.c: 13:  {;ISR.c: 14:   if(GP0)
   377     03DA  1283               	bcf	3,5	;RP0=0, select bank0
   378     03DB  1C05               	btfss	5,0	;volatile
   379     03DC  2BDE               	goto	u41
   380     03DD  2BDF               	goto	u40
   381     03DE                     u41:
   382     03DE  2BE3               	goto	l12
   383     03DF                     u40:
   384     03DF                     l669:
   385                           
   386                           ;ISR.c: 15:   {;ISR.c: 16:    GP0 = 0;
   387     03DF  1005               	bcf	5,0	;volatile
   388     03E0                     l671:
   389                           
   390                           ;ISR.c: 17:    TMR0 = PWM;
   391     03E0  0820               	movf	_PWM,w
   392     03E1  0081               	movwf	1	;volatile
   393                           
   394                           ;ISR.c: 18:   }
   395     03E2  2BE6               	goto	l675
   396     03E3                     l12:	
   397                           ;ISR.c: 19:   else
   398                           
   399                           
   400                           ;ISR.c: 20:   {;ISR.c: 21:    GP0 = 1;
   401     03E3  1405               	bsf	5,0	;volatile
   402     03E4                     l673:
   403                           
   404                           ;ISR.c: 22:    TMR0 = 255 - PWM;
   405     03E4  0920               	comf	_PWM,w
   406     03E5  0081               	movwf	1	;volatile
   407     03E6                     l675:
   408                           
   409                           ;ISR.c: 25:   T0IF = 0;
   410     03E6  110B               	bcf	11,2	;volatile
   411     03E7                     l14:
   412     03E7  0008               	return
   413     03E8                     __end_of_interruptISR:
   414                           
   415                           	psect	text2
   416     03CD                     __ptext2:	
   417 ;; *************** function _InitPWM *****************
   418 ;; Defined at:
   419 ;;		line 9 in file "PWM.c"
   420 ;; Parameters:    Size  Location     Type
   421 ;;		None
   422 ;; Auto vars:     Size  Location     Type
   423 ;;		None
   424 ;; Return value:  Size  Location     Type
   425 ;;                  1    wreg      void 
   426 ;; Registers used:
   427 ;;		None
   428 ;; Tracked objects:
   429 ;;		On entry : 0/0
   430 ;;		On exit  : 0/0
   431 ;;		Unchanged: 0/0
   432 ;; Data sizes:     COMMON   BANK0
   433 ;;      Params:         0       0
   434 ;;      Locals:         0       0
   435 ;;      Temps:          0       0
   436 ;;      Totals:         0       0
   437 ;;Total ram usage:        0 bytes
   438 ;; Hardware stack levels used: 1
   439 ;; This function calls:
   440 ;;		Nothing
   441 ;; This function is called by:
   442 ;;		_main
   443 ;; This function uses a non-reentrant model
   444 ;;
   445                           
   446     03CD                     _InitPWM:	
   447                           ;psect for function _InitPWM
   448                           
   449     03CD                     l677:	
   450                           ;incstack = 0
   451                           ; Regs used in _InitPWM: []
   452                           
   453                           
   454                           ;PWM.c: 12:     OPTION_REGbits.T0CS = 0;
   455     03CD  1683               	bsf	3,5	;RP0=1, select bank1
   456     03CE  1281               	bcf	1,5	;volatile
   457                           
   458                           ;PWM.c: 13:     OPTION_REGbits.PSA = 0;
   459     03CF  1181               	bcf	1,3	;volatile
   460                           
   461                           ;PWM.c: 14:     OPTION_REGbits.PS2 = 0;
   462     03D0  1101               	bcf	1,2	;volatile
   463                           
   464                           ;PWM.c: 15:     OPTION_REGbits.PS1 = 1;
   465     03D1  1481               	bsf	1,1	;volatile
   466                           
   467                           ;PWM.c: 16:     OPTION_REGbits.PS0 = 0;
   468     03D2  1001               	bcf	1,0	;volatile
   469                           
   470                           ;PWM.c: 20:  T0IE = 1;
   471     03D3  168B               	bsf	11,5	;volatile
   472                           
   473                           ;PWM.c: 21:  GIE = 1;
   474     03D4  178B               	bsf	11,7	;volatile
   475     03D5                     l25:
   476     03D5  0008               	return
   477     03D6                     __end_of_InitPWM:
   478     005E                     btemp	set	94	;btemp
   479     005E                     wtemp0	set	94
   480                           
   481                           	psect	idloc
   482                           
   483                           ;Config register IDLOC0 @ 0x2000
   484                           ;	unspecified, using default values
   485     2000                     	org	8192
   486     2000  3FFF               	dw	16383
   487                           
   488                           ;Config register IDLOC1 @ 0x2001
   489                           ;	unspecified, using default values
   490     2001                     	org	8193
   491     2001  3FFF               	dw	16383
   492                           
   493                           ;Config register IDLOC2 @ 0x2002
   494                           ;	unspecified, using default values
   495     2002                     	org	8194
   496     2002  3FFF               	dw	16383
   497                           
   498                           ;Config register IDLOC3 @ 0x2003
   499                           ;	unspecified, using default values
   500     2003                     	org	8195
   501     2003  3FFF               	dw	16383
   502                           
   503                           	psect	config
   504                           
   505                           ;Config register CONFIG @ 0x2007
   506                           ;	Oscillator Selection bits
   507                           ;	FOSC = INTRCIO, INTOSC oscillator: I/O function on GP4/OSC2/CLKOUT pin, I/O function o
      +                          n GP5/OSC1/CLKIN
   508                           ;	Watchdog Timer Enable bit
   509                           ;	WDTE = OFF, WDT disabled
   510                           ;	Power-Up Timer Enable bit
   511                           ;	PWRTE = ON, PWRT enabled
   512                           ;	GP3/MCLR pin function select
   513                           ;	MCLRE = OFF, GP3/MCLR pin function is digital I/O, MCLR internally tied to VDD
   514                           ;	Brown-out Detect Enable bit
   515                           ;	BOREN = ON, BOD enabled
   516                           ;	Code Protection bit
   517                           ;	CP = OFF, Program Memory code protection is disabled
   518                           ;	Data Code Protection bit
   519                           ;	CPD = OFF, Data memory code protection is disabled
   520     2007                     	org	8199
   521     2007  31C4               	dw	12740

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON            0      0       0
    BANK0            62      0       1

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                            _InitPWM
                       _interruptISR
 ---------------------------------------------------------------------------------
 (1) _interruptISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitPWM                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _InitPWM
   _interruptISR

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            0      0       0       0        0.0%
EEDATA              80      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BITBANK0            3E      0       0       3        0.0%
BANK0               3E      0       1       4        1.6%
ABS                  0      0       1       5        0.0%
DATA                 0      0       1       6        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Wed Mar 01 09:18:54 2023

                     l12 03E3                       l14 03E7                       l25 03D5  
                     l48 03F9                       l49 03F9                       u30 03DA  
                     u31 03D9                       u40 03DF                       u41 03DE  
                    l701 03F4                      l703 03F5                      l705 03F6  
                    l671 03E0                      l673 03E4                      l665 03D6  
                    l675 03E6                      l667 03DA                      l677 03CD  
                    l669 03DF                      l693 03E8                      l695 03EC  
                    l697 03EE                      l699 03F2                      _GP0 0028  
                    _GIE 005F                      _PWM 0020                     _T0IE 005D  
                   _T0IF 005A                     _GPIO 0005                     _TMR0 0001  
                   _main 03E8                     btemp 005E                     start 0000  
        __end_of_InitPWM 03D6                    ?_main 0000                    _CMCON 0019  
                  _ANSEL 009F                    _VRCON 0099                    status 0003  
                  wtemp0 005E          __initialization 03FB             __end_of_main 03FB  
                 ??_main 0000                   _ADCON0 001F                   _TRISIO 0085  
              ??_InitPWM 0000  __end_of__initialization 03FD           __pcstackCOMMON 0000  
          ?_interruptISR 0000           _OPTION_REGbits 0081               __pbssBANK0 0020  
         ??_interruptISR 0000               __pmaintext 03E8                  _InitPWM 03CD  
                __ptext1 03D6                  __ptext2 03CD     end_of_initialization 03FD  
   __end_of_interruptISR 03E8      start_initialization 03FB                ___latbits 0000  
          __pcstackBANK0 0000                 ?_InitPWM 0000             _interruptISR 03D6  
